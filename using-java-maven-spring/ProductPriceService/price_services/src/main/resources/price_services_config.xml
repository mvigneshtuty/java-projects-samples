<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:web-services="http://www.springframework.org/schema/web-services"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd">

	<context:component-scan base-package="org.nfjs.springws.productprice" />
	<context:property-placeholder location="classpath:productprice.properties" />

	<oxm:jaxb2-marshaller id="productpriceRequestMarshaller"
		context-path="org.nfjs.springws.productprice.domain.request" />

	<oxm:jaxb2-marshaller id="productpriceResponseMarshaller"
		context-path="org.nfjs.springws.productprice.domain.response" />

	<oxm:jaxb2-marshaller id="productcatalogRequestMarshaller"
		context-path="org.nfjs.springws.pcatalog.domain.request" />

	<oxm:jaxb2-marshaller id="productcatalogResponseMarshaller"
		context-path="org.nfjs.springws.pcatalog.domain.response" />
		
	<bean id="productpriceRequestXsd" class="java.lang.String">
		<constructor-arg value="classpath:xsd/productpricerequest.xsd" />
	</bean>

	<bean id="productpriceResponseXsd" class="java.lang.String">
		<constructor-arg value="classpath:xsd/productpriceresponse.xsd" />
	</bean>

	<!-- inmemory database -->
	<jdbc:embedded-database id="productpriceDataSource"
		type="H2">
		<jdbc:script location="classpath:dbscript/create_price.sql" />
	</jdbc:embedded-database>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="productpriceDataSource"></property>
	</bean>

	<bean id="productpricerequest" class="org.springframework.xml.xsd.SimpleXsdSchema"
		p:xsd="classpath:xsd/productpricerequest.xsd" />

	<bean id="productpriceresponse" class="org.springframework.xml.xsd.SimpleXsdSchema"
		p:xsd="classpath:xsd/productpriceresponse.xsd" />

	<web-services:static-wsdl id="ProductsPrice"
		location="classpath:ProductsPrice.wsdl" />

	<bean id="pcatalogRequestMessageSender"
		class="org.springframework.ws.transport.http.HttpComponentsMessageSender">
		<property name="connectionTimeout" value="15" />
		<property name="readTimeout" value="30" />
	</bean>

	<bean id="productpricePayloadValidatingInterceptor"
		class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"
		p:validateRequest="true" p:addValidationErrorDetail="true">
		<property name="schemas">
			<list>
				<ref bean="productpriceRequestXsd" />
			</list>
		</property>
	</bean>


	<bean id="productPriceEndpointMapping"
		class="org.springframework.ws.server.endpoint.mapping.UriEndpointMapping"
		p:usePath="true">
		<property name="mappings">
			<props>
				<prop key="/product-price-services/org/nfjs/springws/productprice">productprice-wsgateway</prop>
			</props>
		</property>
		<property name="interceptors">
			<list>
				<ref bean="productpricePayloadValidatingInterceptor" />
			</list>
		</property>
	</bean>

</beans>